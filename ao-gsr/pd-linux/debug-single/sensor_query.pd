#N canvas 66 87 1414 924 10;
#X msg 31 84 init;
#X floatatom 31 610 5 0 0 0 - - -;
#X obj 31 26 loadbang;
#X floatatom 220 497 5 0 0 0 - - -;
#X text 257 497 next_state;
#X msg 460 633 set_p \$1;
#X floatatom 460 613 5 0 1 0 - - -;
#X obj 294 24 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 57 288 prepend add_state;
#X obj 199 615 dac~;
#X obj 505 23 loadbang;
#X obj 505 65 send frame_size_ms;
#N canvas 952 329 450 300 ms_to_samps 0;
#X obj 117 103 samplerate~;
#X obj 46 27 r frame_size_ms;
#X obj 46 108 / 1000;
#X obj 46 134 *;
#X obj 46 56 t f b;
#X obj 46 175 outlet;
#X floatatom 137 145 5 0 0 0 - - -;
#X connect 0 0 3 1;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 0 6 0;
#X connect 4 0 2 0;
#X connect 4 1 0 0;
#X restore 235 517 pd ms_to_samps;
#X obj 220 547 *;
#X obj 130 23 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 130 42 openpanel;
#X obj 130 87 soundfiler;
#X msg 293 83 train 1 127 1;
#N canvas 485 399 363 214 capture_input 0;
#X obj 26 49 sel 0 1;
#X msg 26 69 stop;
#X text 80 27 capture current audio input for later lookup;
#X obj 109 61 inlet~;
#X obj 26 143 tabwrite~ audio3;
#X obj 26 27 r learnq;
#X connect 0 0 1 0;
#X connect 0 1 4 0;
#X connect 1 0 4 0;
#X connect 3 0 4 0;
#X connect 5 0 0 0;
#X restore 174 234 pd capture_input;
#N canvas 653 428 450 300 make_new_state 0;
#X obj 27 40 metro 100;
#X floatatom 89 196 5 0 0 0 - - -;
#X obj 50 147 sigmund~ 1024;
#X obj 27 218 f;
#X obj 50 174 moses 0;
#X obj 78 17 r frame_size_ms;
#X text 103 115 make new states from current audio input;
#X obj 27 243 outlet;
#X obj 50 117 inlet~;
#X obj 27 17 r learnq;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 2 0 4 0;
#X connect 3 0 7 0;
#X connect 4 1 1 0;
#X connect 5 0 0 1;
#X connect 8 0 2 0;
#X connect 9 0 0 0;
#X restore 57 234 pd make_new_state;
#X floatatom 57 261 5 0 0 0 - - -;
#X msg 505 44 50;
#X obj 57 143 sel 0 1;
#X msg 57 163 stop;
#X text 66 610 # of oracle states;
#X text 153 182 this can also be an adc~;
#X text 64 83 4 reinit;
#X text 151 21 1 open soundfile;
#X text 292 63 3 find ideal distance threshold;
#X obj 428 174 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 428 193 openpanel;
#X obj 428 238 soundfiler;
#X obj 428 258 table query 441000;
#X msg 428 216 read -resize \$1 query;
#N canvas 649 426 450 300 make_new_state 0;
#X obj 27 40 metro 100;
#X floatatom 89 196 5 0 0 0 - - -;
#X obj 50 147 sigmund~ 1024;
#X obj 27 218 f;
#X obj 50 174 moses 0;
#X obj 78 17 r frame_size_ms;
#X text 103 115 make new states from current audio input;
#X obj 27 243 outlet;
#X obj 50 117 inlet~;
#X obj 27 17 r query;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 2 0 4 0;
#X connect 3 0 7 0;
#X connect 4 1 1 0;
#X connect 5 0 0 1;
#X connect 8 0 2 0;
#X connect 9 0 0 0;
#X restore 429 385 pd make_new_state;
#X floatatom 441 529 5 0 0 0 - - -;
#X msg 429 334 stop;
#X obj 429 294 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 429 315 sel 0 1;
#X obj 429 354 tabplay~ query;
#X obj 541 328 s gen;
#X obj 440 575 prepend query;
#X obj 587 328 s query;
#X obj 286 234 s~ in_audio_q;
#X obj 241 590 r~ in_audio_q;
#X obj 504 89 table audio3 4.41e+07;
#X obj 220 567 make_crossfade_audio audio3;
#X obj 294 44 s learnq;
#X obj 57 121 r learnq;
#X obj 293 107 s to_query_ao;
#X obj 52 412 r to_query_ao;
#X obj 440 742 s to_query_ao;
#X obj 130 107 table input3 441000;
#X msg 130 65 read -resize \$1 input3;
#X obj 57 183 tabplay~ input3;
#X msg 487 699 set_query_thresh \$1;
#X floatatom 487 670 5 0 0 0 - - -;
#X obj 139 569 r~ query_in;
#X obj 549 385 s~ query_in;
#X text 315 21 2 learn source oracle;
#X text 449 172 5 open query soundfile;
#X text 453 291 6 start query;
#X text 737 29 ao query;
#X text 736 49 it is possible to "query" a previously learned ao \,
by finding matches to a different input source. the ao will then be
navigated so that the nearest matches to the current input are used.
;
#X text 736 112 to use the query functionality \, train an oracle as
demonstrated in the [pd navigation] subpatch. this oracle will serve
as the database for the query. then \, open a new soundfile with [5].
this soundfile will serve as the query \, and generation will attempt
to match this soundfile as it plays.;
#X text 525 668 7 set query threshold;
#X text 496 611 8 continuity parameter;
#X text 536 43 9 frame size;
#X text 736 200 next \, set the query threshold with [7]. this threshold
determines which states will be considered close enough for matching.
generally \, the query threshold should be set slightly higher than
the distance threshold used in construction of the original oracle.
;
#X text 736 272 finally \, start querying the oracle by toggling playback
with [6]. each time the ao navigation jumps \, it will attempt to match
the most recent frame of the query input audio. the ratio of these
jumps to linear transitions can be controlled with [8].;
#X obj 31 445 ao_gsr;
#X msg 121 391 add_sensor_data \$1;
#X obj 54 312 t a b;
#X obj 128 340 random 1000;
#X obj 119 361 / 1000;
#X obj 438 553 prepend 1;
#X text 505 551 dim of input vec;
#X obj 454 509 prepend;
#X obj 396 403 t b a;
#X obj 377 444 random 1000;
#X obj 389 487 / 1000;
#X msg 156 433 print_sfx;
#X text 526 577 format: [query feat_dim feat_vec sensor_data_float]
;
#X connect 0 0 70 0;
#X connect 2 0 0 0;
#X connect 3 0 13 0;
#X connect 5 0 51 0;
#X connect 6 0 5 0;
#X connect 7 0 47 0;
#X connect 8 0 72 0;
#X connect 10 0 21 0;
#X connect 12 0 13 1;
#X connect 13 0 46 0;
#X connect 14 0 15 0;
#X connect 15 0 53 0;
#X connect 17 0 49 0;
#X connect 19 0 20 0;
#X connect 20 0 8 0;
#X connect 21 0 11 0;
#X connect 22 0 23 0;
#X connect 22 1 54 0;
#X connect 23 0 54 0;
#X connect 29 0 30 0;
#X connect 30 0 33 0;
#X connect 33 0 31 0;
#X connect 34 0 78 0;
#X connect 35 0 75 0;
#X connect 36 0 39 0;
#X connect 37 0 38 0;
#X connect 37 0 40 0;
#X connect 37 0 42 0;
#X connect 38 0 36 0;
#X connect 38 1 39 0;
#X connect 39 0 34 0;
#X connect 39 0 58 0;
#X connect 41 0 51 0;
#X connect 44 0 9 1;
#X connect 46 0 9 1;
#X connect 48 0 22 0;
#X connect 50 0 70 0;
#X connect 53 0 16 0;
#X connect 54 0 19 0;
#X connect 54 0 18 0;
#X connect 54 0 43 0;
#X connect 55 0 51 0;
#X connect 56 0 55 0;
#X connect 57 0 9 0;
#X connect 70 0 1 0;
#X connect 70 1 3 0;
#X connect 71 0 70 0;
#X connect 72 0 70 0;
#X connect 72 1 73 0;
#X connect 73 0 74 0;
#X connect 74 0 71 0;
#X connect 75 0 41 0;
#X connect 77 0 75 0;
#X connect 78 0 79 0;
#X connect 78 1 77 1;
#X connect 79 0 80 0;
#X connect 80 0 77 0;
#X connect 81 0 70 0;
